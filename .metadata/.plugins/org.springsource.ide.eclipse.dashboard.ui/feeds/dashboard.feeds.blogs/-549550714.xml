<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Spring</title>
  <link rel="alternate" href="https://spring.io/blog" />
  <link rel="self" href="https://spring.io/blog.atom" />
  <id>http://spring.io/blog.atom</id>
  <icon>https://spring.io/favicon.ico</icon>
  <updated>2016-02-02T13:34:00Z</updated>
  <entry>
    <title>This Week in Spring - February 2nd, 2016</title>
    <link rel="alternate" href="https://spring.io/blog/2016/02/02/this-week-in-spring-february-2nd-2016" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2016-02-02:2363</id>
    <updated>2016-02-02T13:34:00Z</updated>
    <content type="html">&lt;p&gt;Welcome to another installment of &lt;em&gt;This Week in Spring!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This week I&amp;rsquo;m off to the &lt;a href="http://microxchg.io/2016/index.html"&gt;Microxchg&lt;/a&gt; conference in Berlin, Germany, to generally bring the Spring and talk about microservices. Then, it&amp;rsquo;s off to Stockholm, Sweden for &lt;a href="http://www.jfokus.se/jfokus/"&gt;JFokus&lt;/a&gt;! As usual, if you&amp;rsquo;re in either of those places, &lt;a href="http://twitter.com/starbuxman"&gt;hit me up&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;This week we&amp;rsquo;ve got a lot to cover so let&amp;rsquo;s get to it!&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Batch lead Michael Minella has just announced a new project, &lt;a href="http://spring.io/blog/2016/01/27/introducing-spring-cloud-task"&gt;Spring Cloud Task&lt;/a&gt;. Spring Cloud Task provides the ability to run, manage and distribute ad-hoc tasks in the same way you can run batch &lt;code&gt;Job&lt;/code&gt;s with Spring Batch. There are some exciting integrations possible with Spring StateMachine and Spring Cloud Dataflow, so read this post and stay tuned!&lt;/li&gt;
  &lt;li&gt;you might enjoy this German-language JAXenter &lt;a href="https://jaxenter.de/spring-cloud-task-kurzlebige-microservices-33925"&gt;post on Spring Cloud Task&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Security lead Rob Winch has a nice post on security with Angular.js titled, &lt;a href="http://spring.io/blog/2016/01/28/angularjs-escaping-the-expression-sandbox-for-xss"&gt;&lt;em&gt;Angular.js: Escaping the Expression Sandbox for XSS&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Integration committer (and, yes, ninja) and &lt;a href="http://spring.io/blog/2016/01/28/java-dsl-for-spring-integration-1-1-2-is-available-now"&gt;Spring Integration Java Config DSL lead Artem Bilan has just announced Spring Integration 1.1.2&lt;/a&gt; which includes updates and bug fixes.&lt;/li&gt;
  &lt;li&gt;Spring IO Platform lead Andy Wilkinson&amp;rsquo;s just &lt;a href="http://spring.io/blog/2016/02/01/spring-io-platform-2-0-2-release"&gt;released Spring IO Platform 2.0.2&lt;/a&gt; which adds the latest maintenance releases for several projects&lt;/li&gt;
  &lt;li&gt;SpringOne2GX 2015 replay: &lt;a href="https://spring.io/blog/2016/02/02/springone2gx-2015-replay-implementing-a-highly-scalable-stock-prediction-system-with-r-apache-geode-and-spring-xd"&gt;Implementing a Highly Scalable Stock Prediction System with R, Apache Geode and Spring XD&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;SpringOne2GX 2015 replay: &lt;a href="https://spring.io/blog/2016/02/02/springone2gx-2015-replay-spring-boot-is-made-for-tooling"&gt;Spring Boot is made for tooling&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;SpringOne2GX 2015 replay: &lt;a href="https://spring.io/blog/2016/02/02/springone2gx-2015-replay-building-highly-scalable-spring-applications-with-in-memory-distributed-data"&gt;Building Highly-Scalable Spring Applications with In-Memory, Distributed Data&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;SpringOne2GX 2015 replay: &lt;a href="https://spring.io/blog/2016/02/02/springone2gx-2015-replay-introduction-to-reactive-programming"&gt;Introduction to Reactive Programming&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I really enjoyed &lt;a href="http://yetanotherdevblog.com/introduction_to_spring_restdocs"&gt;Stathis Souris&amp;rsquo;s post on using Spring REST Docs&lt;/a&gt;: it&amp;rsquo;s thorough, progresses linearly and nicely, and it&amp;rsquo;s up-to-date. Well done!&lt;/li&gt;
  &lt;li&gt;our pal Biju Kunjummen&amp;rsquo;s put together a nice post &lt;a href="http://www.javacodegeeks.com/2016/02/spring-cloud-ribbon-making-secured-call.html"&gt;on using Spring Cloud Ribbon to make secured calls to another service&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;our pal Petri Kainulainen is back at it again, this time with the &lt;a href="http://www.petrikainulainen.net/programming/spring-framework/spring-batch-tutorial-getting-the-required-dependencies-with-maven/"&gt;second installment of his series on Spring Batch&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;if you &lt;em&gt;must&lt;/em&gt; stand up a new application today without Spring Boot, then you might look at &lt;a href="http://blog.codeleak.pl/2016/01/spring-mvc-4-quickstart-maven-archetype.html"&gt;Rafa©© Borowiec&lt;/a&gt;&amp;rsquo;s Maven archetype. But, (_gulp_!) please don&amp;rsquo;t stand up a new application without Spring Boot!&lt;/li&gt;
  &lt;li&gt;I loved this forum post on the good &amp;rsquo;ol JavaRanch in which our very own Craig Walls, lead of Spring Social and author of the recently released and epic &lt;em&gt;Spring Boot in Action&lt;/em&gt;, answers the question: &lt;a href="http://www.coderanch.com/t/661254/Spring/Spring-Boot-Spring-Projects"&gt;How does Spring Boot relate to other Spring projects&lt;/a&gt;? Check it out!&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>SpringOne2GX 2015 replay: Implementing a Highly Scalable Stock Prediction System with R, Apache Geode and Spring XD</title>
    <link rel="alternate" href="https://spring.io/blog/2016/02/02/springone2gx-2015-replay-implementing-a-highly-scalable-stock-prediction-system-with-r-apache-geode-and-spring-xd" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2016-02-02:2366</id>
    <updated>2016-02-02T13:33:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne2GX 2015.&lt;br/&gt;Presenters: Fred Melo &amp;amp; William Markito Oliveira&lt;br/&gt;Big Data Track&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/implementing-a-highly-scalable-stock-prediction-system-with-r-apache-geode-and-spring-xd"&gt;http://www.slideshare.net/SpringCentral/implementing-a-highly-scalable-stock-prediction-system-with-r-apache-geode-and-spring-xd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Finance market prediction has always been one of the hottest topics in Data Science and Machine Learning. However, the prediction algorithm is just a small piece of the puzzle. Building a data stream pipeline that is constantly combining the latest price info with high volume historical data is extremely challenging using traditional platforms, requiring a lot of code and thinking about how to scale or move into the cloud. This session is going to walk-through the architecture and implementation details of an application built on top of open-source tools that demonstrate how to easily build a stock prediction solution with no source code - except a few lines of R and the web interface that will consume data through a RESTful endpoint, real-time. The solution leverages in-memory data grid technology for high-speed ingestion, combining streaming of real-time data and distributed processing for stock indicator algorithms.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/0btWBAWnz20" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>SpringOne2GX 2015 replay: Spring Boot is made for tooling</title>
    <link rel="alternate" href="https://spring.io/blog/2016/02/02/springone2gx-2015-replay-spring-boot-is-made-for-tooling" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2016-02-02:2367</id>
    <updated>2016-02-02T13:33:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne2GX 2015.&lt;br/&gt;Presenters:Yann C?bron - JetBrains, St?phane Nicoll, Pivotal&lt;br/&gt;Core Spring Track&lt;br/&gt;Slides: no slides all demo&lt;/p&gt;
&lt;p&gt;For many years, IntelliJ IDEA has been widely used in projects employing the Spring Framework. The latest version of the IDE (14.1) now ships with dedicated Spring Boot support. In this practical presentation we&amp;rsquo;re going to look at some features from IntelliJ IDEA that will help you not only get started with Spring Boot but also guide you along the way, helping with coding and configuration management for your application. As a bonus, we&amp;rsquo;ll also discover some nice hidden tips and tricks you might not know yet. This talk is all about being more efficient when writing code.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/IHZ0d3MBb0g" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>SpringOne2GX 2015 replay: Building Highly-Scalable Spring Applications with In-Memory, Distributed Data</title>
    <link rel="alternate" href="https://spring.io/blog/2016/02/02/springone2gx-2015-replay-building-highly-scalable-spring-applications-with-in-memory-distributed-data" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2016-02-02:2365</id>
    <updated>2016-02-02T13:24:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne2GX 2015.&lt;br/&gt;Speakers: John Blum &amp;amp; Luke Shannon&lt;br/&gt;Data/Integration Track&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/building-highly-scalable-spring-applications-using-inmemory-data-grids-53086251"&gt;http://www.slideshare.net/SpringCentral/building-highly-scalable-spring-applications-using-inmemory-data-grids-53086251&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Building highly scalable, low latency applications while simultaneously preserving consistency, high availability and resiliency requires a new breed of technology. In this presentation we introduce Pivotal GemFire along with the open source offering, Apache Geode. Apache Geode is a proven, distributed, in-memory database with ACID properties that can handle large volumes of transactional data under heavy load. Apache Geode gives Spring-based applications the edge they require as demand changes without sacrificing integrity or the end-user&amp;rsquo;s experience.&lt;/p&gt;
&lt;p&gt;Using Spring Boot and Spring Data GemFire, we demonstrate how to effectively build highly scalable applications with Pivotal GemFire/Apache Geode starting with configuration and setup, then moving into persisting and accessing data with Spring Data Commons Repositories, OQL with proper Indexing, and Spring Data GemFire&amp;rsquo;s annotation-based, data-aware Function executions, based on the familiar Map-Reduce pattern of bringing business logic to your data. Next, we expand on these fundamental, foundational features with advanced topics on Partitioning, Collocation, Write-Through/Write-Behind, Register Interests/CQs, PDX and Cache as well as Global, JTA-based Transactions.&lt;/p&gt;
&lt;p&gt;Finally, we show how Pivotal GemFire/Apache Geode can be used to seamlessly address other application concerns from caching with Spring&amp;rsquo;s core Cache Abstraction to session management using Spring Session. And most importantly, we cover techniques for properly testing applications built on Pivotal GemFire along with techniques to manage and monitor your cluster. By sessions end, attendees should feel comfortable building highly-scalable applications effectively and productively.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/1mMDl-0Scmc" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>SpringOne2GX 2015 replay: Introduction to Reactive Programming</title>
    <link rel="alternate" href="https://spring.io/blog/2016/02/02/springone2gx-2015-replay-introduction-to-reactive-programming" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2016-02-02:2364</id>
    <updated>2016-02-02T12:41:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne2GX 2015&lt;br/&gt;Presenters: Stephane Maldini &amp;amp; Rossen Stoyanchev&lt;br/&gt;Web / Javascript Track&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/introduction-to-reactive-programming"&gt;http://www.slideshare.net/SpringCentral/introduction-to-reactive-programming&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is your one stop shop introduction to get oriented to the world of reactive programming. There are lots of such intros out there even manifestos. We hope this is the one where you don&amp;rsquo;t get lost and it makes sense. Get a definition of what &amp;ldquo;reactive&amp;rdquo; means and why it matters. Learn about Reactive Streams and Reactive Extensions and the emerging ecosystem around them. Get a sense for what going reactive means for the programming model. See lots of hands-on demos introducing the basic concepts in composition libraries using RxJava and Reactor.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/fec9nEIybp0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>Spring Statemachine 1.1.0.M1 Released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/02/02/spring-statemachine-1-1-0-m1-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Janne Valkealahti</name>
    </author>
    <id>tag:spring.io,2016-01-30:2360</id>
    <updated>2016-02-02T08:22:44Z</updated>
    <content type="html">&lt;p&gt;We¡¯re pleased to announce a first milestone release of &lt;a href="https://projects.spring.io/spring-statemachine/"&gt;Spring Statemachine&lt;/a&gt; 1.1.0.M1.&lt;/p&gt;
&lt;p&gt;We released 1.0.0.M1 April 2015 and 1.0.0.RELEASE October 2015. We&amp;rsquo;ve also done 2 maintenance releases for 1.0.x series and now it&amp;rsquo;s time to look in a future with a 1.1.x serie. 1.0.x enters into a maintenance mode while main development will focus on 1.1.x. This doesn&amp;rsquo;t mean that we&amp;rsquo;ll stop with 1.0.x, maintenance fixes for it will be done until we&amp;rsquo;re succesfully transitioned beyond 1.1.x release. It is important in Spring projects to not drop maintenance until users are ready to move on into next minor/major release. We expect 1.0.x and 1.1.x live side by side until we fire out 1.2.x or 2.x serie in foreseeable future.&lt;/p&gt;
&lt;p&gt;What we actually got into this first milestone:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Support for protecting events, transitions and actions with &lt;a href="http://projects.spring.io/spring-security/"&gt;Spring Security&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;StateContext is now a first class citizen and has a bigger role both internally and how user interacts with it.&lt;/li&gt;
  &lt;li&gt;Annotation model(@WithStateMachine) has been enhanced to match features from listeners and context events.&lt;/li&gt;
  &lt;li&gt;Persist feature for Redis using Kryo serialization.&lt;/li&gt;
  &lt;li&gt;Additional bug fixes and minor enhacements which were backported into 1.0.x.&lt;/li&gt;
  &lt;li&gt;Two new samples using &lt;a href="http://docs.spring.io/spring-statemachine/docs/1.1.0.M1/reference/htmlsingle/#statemachine-examples-security"&gt;security&lt;/a&gt; and &lt;a href="http://docs.spring.io/spring-statemachine/docs/1.1.0.M1/reference/htmlsingle/#statemachine-examples-eventservice"&gt;redis persistence&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Full changes as usual is available from &lt;a href="https://github.com/spring-projects/spring-statemachine/blob/master/docs/src/info/changelog.txt"&gt;changelog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We added preliminary support for &lt;em&gt;Session&lt;/em&gt; scoped beans for a state machine which has been a base for getting support for &lt;a href="http://projects.spring.io/spring-session/"&gt;Spring Session&lt;/a&gt;. Further work is still work in progress waiting for next release from Spring Session 1.1.x order to support custom session serialization.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;re planning to do second milestone before a release candidate order to get into Spring IO release later this year around May(ish). We may do a final release when we&amp;rsquo;re ready but IO schedule is a final possible target date.&lt;/p&gt;
&lt;p&gt;Thank you for all who have contributed in any way either via Stack Overflow, GitHub Issues or other channels. Driving force for changes really has been a community and requests from it.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring IO Platform 2.0.2.RELEASE</title>
    <link rel="alternate" href="https://spring.io/blog/2016/02/01/spring-io-platform-2-0-2-release" />
    <category term="releases" label="Releases" />
    <author>
      <name>Andy Wilkinson</name>
    </author>
    <id>tag:spring.io,2016-02-01:2362</id>
    <updated>2016-02-01T11:34:07Z</updated>
    <content type="html">&lt;p&gt;&lt;a href="http://platform.spring.io/platform"&gt;Spring IO Platform&lt;/a&gt; 2.0.2.RELEASE is now available from both &lt;a href="http://repo.spring.io/release"&gt;repo.spring.io&lt;/a&gt; and &lt;a href="http://search.maven.org/#search%7Cga%7C1%7Cg%3Aio.spring.platform"&gt;Maven Central&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;This maintenance release upgrades the versions of a number of the projects in the Platform to pick up their latest maintenance releases:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spring AMQP 1.5.3.RELEASE&lt;/li&gt;
  &lt;li&gt;Spring Boot 1.3.2.RELEASE&lt;/li&gt;
  &lt;li&gt;Spring Integration Java DSL 1.1.2.RELEASE&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The versions of several third-party dependencies have also been updated.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://platform.spring.io/platform"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-io/platform"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-io/platform/issues"&gt;Issues&lt;/a&gt; | &lt;a href="http://docs.spring.io/platform/docs/2.0.2.RELEASE/reference/htmlsingle"&gt;Documentation&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Java DSL for Spring Integration 1.1.2 is available now</title>
    <link rel="alternate" href="https://spring.io/blog/2016/01/28/java-dsl-for-spring-integration-1-1-2-is-available-now" />
    <category term="releases" label="Releases" />
    <author>
      <name>Artem Bilan</name>
    </author>
    <id>tag:spring.io,2016-01-28:2359</id>
    <updated>2016-01-28T14:23:00Z</updated>
    <content type="html">&lt;p&gt;Dear Spring Community,&lt;/p&gt;
&lt;p&gt;The Spring Integration Java DSL 1.1.2 has been released and is available now from &lt;a href="http://repo.spring.io/release"&gt;repo.spring.io&lt;/a&gt; and &lt;a href="http://search.maven.org/#search|ga|1|spring-integration-java-dsl"&gt;Maven Central&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;This maintenance release includes several &lt;a href="https://github.com/spring-projects/spring-integration-java-dsl/commits/v1.1.2.RELEASE"&gt;fixes&lt;/a&gt; and 3rd party dependency updates.&lt;/p&gt;
&lt;p&gt;Thank you everyone for contribution and any kind of feedback!&lt;/p&gt;
&lt;p&gt;We don&amp;rsquo;t have particular plans for version &lt;code&gt;1.2&lt;/code&gt;, because we are looking into the absorption of Java DSL project by the Spring Integration 5.0, where Java 8 is minimal, but feel free to ask us for more features and share any concerns which can be considered to be included in the next maintenance release.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/spring-projects/spring-integration-java-dsl"&gt;Project Page&lt;/a&gt; | &lt;a href="https://jira.spring.io/browse/INTEXT"&gt;JIRA&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-integration/blob/master/CONTRIBUTING.md"&gt;Contributions&lt;/a&gt; | &lt;a href="http://stackoverflow.com"&gt;StackOverflow&lt;/a&gt; (&lt;code&gt;spring-integration&lt;/code&gt; tag)&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>AngularJS - Escaping the Expression Sandbox for XSS</title>
    <link rel="alternate" href="https://spring.io/blog/2016/01/28/angularjs-escaping-the-expression-sandbox-for-xss" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Rob Winch</name>
    </author>
    <id>tag:spring.io,2016-01-27:2358</id>
    <updated>2016-01-28T13:07:00Z</updated>
    <content type="html">&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;: This is a summary of &lt;a href="http://blog.portswigger.net/2016/01/xss-without-html-client-side-template.html"&gt;XSS without HTML: Client-Side Template Injection with AngularJS&lt;/a&gt;. Previously the citation was in the middle of the document and difficult to find. The goal of the summary is to present the exploit and a fix without all the nuances, not to claim the work as my own.&lt;/p&gt;&lt;h1&gt;&lt;a href="#introduction" class="anchor" name="introduction"&gt;&lt;/a&gt;Introduction&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://angularjs.org/"&gt;AngularJS&lt;/a&gt; is a popular JavaScript framework that allows embedding &lt;a href="https://code.angularjs.org/1.4.9/docs/guide/expression"&gt;expressions&lt;/a&gt; within double curly braces. &lt;a href="https://code.angularjs.org/1.4.9/docs/guide/expression#example"&gt;For example&lt;/a&gt;, the expression &lt;code&gt;1+2={{1+2}}&lt;/code&gt; will render as &lt;code&gt;1+2=3&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This means that if the server echos out user input that contains double curly braces, the user can perform a XSS exploit using Angular expressions.&lt;/p&gt;&lt;h1&gt;&lt;a href="#writing-user-input-server-side" class="anchor" name="writing-user-input-server-side"&gt;&lt;/a&gt;Writing User Input Server Side&lt;/h1&gt;
&lt;p&gt;Let&amp;rsquo;s explore a page that is safely HTML encoding user input. In our example below, we use &lt;a href="http://www.thymeleaf.org/"&gt;Thymeleaf&lt;/a&gt; to HTML encode and then output the attribute &lt;code&gt;username&lt;/code&gt; to the text of the div of our page.&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint html"&gt;&amp;lt;html xmlns:th=&amp;quot;http://www.thymeleaf.org&amp;quot;&amp;gt;&#xD;
&amp;lt;head&amp;gt;&#xD;
&amp;lt;title&amp;gt;AngularJS - Escaping the Expression Sandbox&amp;lt;/title&amp;gt;&#xD;
&amp;lt;/head&amp;gt;&#xD;
&amp;lt;body&amp;gt;&#xD;
&amp;lt;div th:text=&amp;quot;${username}&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&#xD;
&amp;lt;/body&amp;gt;&#xD;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If username is &lt;code&gt;&amp;lt;script&amp;gt;alert(&amp;#39;Rob&amp;#39;)&amp;lt;/script&amp;gt;&lt;/code&gt; the output might look like:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint html"&gt;&amp;lt;html xmlns:th=&amp;quot;http://www.thymeleaf.org&amp;quot;&amp;gt;&#xD;
&amp;lt;head&amp;gt;&#xD;
&amp;lt;title&amp;gt;AngularJS - Escaping the Expression Sandbox&amp;lt;/title&amp;gt;&#xD;
&amp;lt;/head&amp;gt;&#xD;
&amp;lt;body&amp;gt;&#xD;
&amp;lt;div&amp;gt;&amp;amp;lt;script&amp;amp;gt;alert(&amp;amp;#39;Rob&amp;amp;#39;)&amp;amp;lt;/script&amp;amp;gt;&amp;lt;/div&amp;gt;&#xD;
&amp;lt;/body&amp;gt;&#xD;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You will notice that the output is properly HTML encoded. This means our application is currently safe from XSS attacks.&lt;/p&gt;&lt;h1&gt;&lt;a href="#adding-angularjs" class="anchor" name="adding-angularjs"&gt;&lt;/a&gt;Adding AngularJS&lt;/h1&gt;
&lt;p&gt;Our application is currently secure against XSS attacks. Let&amp;rsquo;s update the application to use AngularJS&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint html"&gt;&amp;lt;html xmlns:th=&amp;quot;http://www.thymeleaf.org&amp;quot;&amp;gt;&#xD;
&amp;lt;head&amp;gt;&#xD;
&amp;lt;title&amp;gt;Angular Expression - safe&amp;lt;/title&amp;gt;&#xD;
&amp;lt;script src=&amp;quot;angular-1.4.8.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&#xD;
&amp;lt;/head&amp;gt;&#xD;
&amp;lt;body ng-app&amp;gt;&#xD;
&amp;lt;div th:text=&amp;quot;${username}&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&#xD;
&amp;lt;/body&amp;gt;&#xD;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You will notice two changes:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;We include added &lt;code&gt;angular-1.4.8.min.js&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;We added &lt;code&gt;ng-app&lt;/code&gt; to the body element&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Our application is now vulnerable to XSS attacks, but how can we exploit it? The big clue should be our introduction to Angular expressions. What would happen with a username of &lt;code&gt;1+2={{1+2}}&lt;/code&gt;? The result would be:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint html"&gt;&amp;lt;html&amp;gt;&#xD;
&amp;lt;head&amp;gt;&#xD;
&amp;lt;title&amp;gt;Angular Expression - safe&amp;lt;/title&amp;gt;&#xD;
&amp;lt;script src=&amp;quot;angular-1.4.8.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&#xD;
&amp;lt;/head&amp;gt;&#xD;
&amp;lt;body ng-app=&amp;quot;&amp;quot;&amp;gt;&#xD;
&amp;lt;div&amp;gt;1+2={{1+2}}&amp;lt;/div&amp;gt;&#xD;
&amp;lt;/body&amp;gt;&#xD;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Angular would then update the DOM to be:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint html"&gt;&amp;lt;html&amp;gt;&#xD;
&amp;lt;head&amp;gt;&#xD;
&amp;lt;title&amp;gt;Angular Expression - safe&amp;lt;/title&amp;gt;&#xD;
&amp;lt;script src=&amp;quot;angular-1.4.8.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&#xD;
&amp;lt;/head&amp;gt;&#xD;
&amp;lt;body ng-app=&amp;quot;&amp;quot;&amp;gt;&#xD;
&amp;lt;div&amp;gt;1+2=3&amp;lt;/div&amp;gt;&#xD;
&amp;lt;/body&amp;gt;&#xD;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We could try a username of &lt;code&gt;{{alert(&amp;#39;Rob&amp;#39;)}}&lt;/code&gt;, but that would be blocked by &lt;a href="https://code.angularjs.org/1.4.9/docs/guide/security#expression-sandboxing"&gt;Expression Sandboxing&lt;/a&gt;. At this point you might think that we are safe. However, despite appearing in the security section of the documention, Expression Sandboxing is not intended to provide security.&lt;/p&gt;
&lt;p&gt;More concretely, the documentation states the following about &lt;a href="https://code.angularjs.org/1.4.9/docs/guide/security#mixing-client-side-and-server-side-templates"&gt;Mixing client-side and server-side templates&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;In general, we recommend against this because it can create unintended XSS vectors.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ultimately, this means that if you allow user input to be rendered in templates on the server side, the application is vulnerable to XSS attacks. Let&amp;rsquo;s take a look at a concrete example.&lt;/p&gt;&lt;h1&gt;&lt;a href="#escaping-the-expression-sandbox" class="anchor" name="escaping-the-expression-sandbox"&gt;&lt;/a&gt;Escaping the Expression Sandbox&lt;/h1&gt;
&lt;p&gt;If our payload is sandboxed, how can we provide a valid XSS exploit?&lt;br/&gt;What would happen if our username was:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint javascript"&gt;{{&#xD;
&amp;#39;a&amp;#39;.constructor.prototype.charAt=[].join;&#xD;
eval(&amp;#39;x=1} } };alert(1)//&amp;#39;);&#xD;
}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By overriding the native function &lt;code&gt;charAt&lt;/code&gt; we can bypass Angular&amp;rsquo;s Expression Sandbox and allow us to execute &lt;code&gt;alert(1)&lt;/code&gt;. Refer to &lt;a href="http://blog.portswigger.net/2016/01/xss-without-html-client-side-template.html"&gt;XSS without HTML: Client-Side Template Injection with AngularJS&lt;/a&gt; for complete details of how the exploit works.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: This payload targets Chrome and AngularJS 1.4.8. It is not known to work in other browsers.&lt;/p&gt;&lt;h1&gt;&lt;a href="#conclusion" class="anchor" name="conclusion"&gt;&lt;/a&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;Allowing the server to echo user input into an Angular template will expose your application to XSS exploits. More generally, you should not mix server side rendering of user input and client side templates. You can find a sample that accompanies this blog post at &lt;a href="https://github.com/rwinch/angularjs-escaping-expression-sandbox"&gt;rwinch/angularjs-escaping-expression-sandbox&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Introducing Spring Cloud Task</title>
    <link rel="alternate" href="https://spring.io/blog/2016/01/27/introducing-spring-cloud-task" />
    <category term="releases" label="Releases" />
    <author>
      <name>Michael Minella</name>
    </author>
    <id>tag:spring.io,2016-01-27:2357</id>
    <updated>2016-01-27T04:44:00Z</updated>
    <content type="html">&lt;p&gt;Today we are pleased to introduce a new project in the Spring portfolio, &lt;a href="http://cloud.spring.io/spring-cloud-task/"&gt;Spring Cloud Task&lt;/a&gt;.  Under the umbrella of the &lt;a href="http://projects.spring.io/spring-cloud/"&gt;Spring Cloud&lt;/a&gt; grouping of projects and the sister project of &lt;a href="http://cloud.spring.io/spring-cloud-stream/"&gt;Spring Cloud Stream&lt;/a&gt;, Spring Cloud Task aims to bring functionality required to support short lived microservices to Spring Boot based applications.  With this blog post, we are releasing our first milestone of the project and are eager for your input and feedback.&lt;/p&gt;
&lt;h2&gt;The Goals of Spring Cloud Task&lt;/h2&gt;
&lt;p&gt;In most cases, the modern cloud environment is designed around the execution of processes that are not expected to end (think web applications or stream modules). If they do, it's considered a failure by the platform and they are typically restarted. While many platforms do have some method to execute a process that is expected to end (a batch job for example), the results of that execution are typically not maintained in a consumable way.  Yet for mission critical applications, even though they are short lived, they still have the same non-functional requirements long lived processes have.&lt;/p&gt;
&lt;p&gt;While this functionality is useful in a cloud environment, the same issues can arise in a traditional deployment model as well. When executing Spring Boot applications via a scheduler like cron, it can be useful to be able to monitor the results of the application after it¡¯s completion.&lt;/p&gt;
&lt;p&gt;A Spring Cloud Task takes the approach that a Spring Boot application can have a start and an end and still be production grade.  Batch applications are just one example of where short lived processes can be helpful.&lt;/p&gt;
&lt;h2&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;In this first release of Spring Cloud Task, we introduce the basics of the configuration mechanisms as well as a repository to record what happens when a task is executed.  Those who are familiar with &lt;a href="http://projects.spring.io/spring-batch/"&gt;Spring Batch&lt;/a&gt; and its job repository should find the general paradigms of Spring Cloud Task familiar.&lt;/p&gt;
&lt;p&gt;To get familiar with Spring Cloud Task, the easiest way is to write an application.  The documentation walks you through the creation of an initial task and its execution.  You can read more about that &lt;a href="http://docs.spring.io/spring-cloud-task/1.0.0.M1/reference/htmlsingle/#getting-started-developing-first-task"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Where we're going&lt;/h2&gt;
&lt;p&gt;Tasks will be a new primitive within &lt;a href="http://cloud.spring.io/spring-cloud-dataflow/"&gt;Spring Cloud Data Flow&lt;/a&gt; in the coming releases allowing users to execute virtually any Spring Boot application as a short lived task.  This provides the flexibility to run everything from a simple &lt;code&gt;CommandLineRunner&lt;/code&gt; to a full batch job in dynamic way, allowing resources to be consumed on demand and returned once complete.  The upcoming releases including Spring Cloud Task 1.0 GA which we plan for just before Spring Cloud Data Flow goes 1.0 GA, will be adding features to support that effort.&lt;/p&gt;
&lt;h2&gt;Tell us what you think!&lt;/h2&gt;
&lt;p&gt;Spring Cloud Task is a new and exciting project that we feel fills an under served area of enterprise development.  However, we want to know what you think.  Please let us know via the issues in &lt;a href="https://github.com/spring-cloud/spring-cloud-task/issues"&gt;Github Issues&lt;/a&gt;, &lt;a href="http://stackoverflow.com/questions/tagged/spring-cloud"&gt;StackOverflow&lt;/a&gt;, or directly on &lt;a href="http://twitter.com/springcentral"&gt;Twitter&lt;/a&gt;!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - January 26th, 2016</title>
    <link rel="alternate" href="https://spring.io/blog/2016/01/26/this-week-in-spring-january-26th-2016" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2016-01-26:2356</id>
    <updated>2016-01-26T12:29:00Z</updated>
    <content type="html">&lt;p&gt;Welcome to another installation of &lt;em&gt;This Week in Spring&lt;/em&gt;! Here we are, already staring at the second month of the year and, &lt;em&gt;boy&lt;/em&gt;!, are things getting exciting! I&amp;rsquo;m about to start hitting the road again and &lt;a href="http://twitter.com/starbuxman"&gt;I&amp;rsquo;d&lt;/a&gt; love &lt;a href="mailto:josh@joshlong.com"&gt;to talk to you&lt;/a&gt; and your organization if you&amp;rsquo;re near any of the following places and events in February:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://microxchg.io/2016/index.html"&gt;Microchg Conf&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.jfokus.se/jfokus/"&gt;JFokus&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.devnexus.com/s/index"&gt;Devnexus&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Hatford, Connecticut (around 17/2/2016)&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://confoo.ca/en"&gt;Confoo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Shanghai (around 26/2/2016)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Anyway, without further ado, let&amp;rsquo;s get into it!&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;our own Paul Chapman chimes in on the &lt;a href="https://spring.io/blog/2016/01/21/pivotal-academy-launches-updated-spring-classes"&gt;updated courseware available for developers who want to learn about Spring&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;there are (finally!) new guides available on using &lt;strong&gt;Spring Cloud&lt;/strong&gt;: &lt;a href="https://spring.io/guides/gs/routing-and-filtering/"&gt;routing and filtering using the Netflix Zuul microproxy library and Spring Cloud&lt;/a&gt;, &lt;a href="https://spring.io/guides/gs/centralized-configuration/"&gt;centralized configuration with the Spring Cloud Config Server&lt;/a&gt;, the &lt;a href="https://spring.io/guides/gs/circuit-breaker/"&gt;circuit breaker design pattern&lt;/a&gt;, and service registration and discovery &lt;a href="https://spring.io/guides/gs/service-registration-and-discovery/"&gt;using Spring Cloud&amp;rsquo;s &lt;code&gt;DiscoveryClient&lt;/code&gt; abstraction and Spring Cloud&amp;rsquo;s integration of Netflix Eureka&lt;/a&gt;. Stay tuned, we&amp;rsquo;ve got more in the pipeline!&lt;/li&gt;
  &lt;li&gt;Spring Boot lead Phil Webb just announced &lt;a href="https://spring.io/blog/2016/01/22/spring-boot-1-3-2-released"&gt;the release of 1.3.2&lt;/a&gt;, which includes updates to dependencies and a few bug fixes&lt;/li&gt;
  &lt;li&gt;check out Jetbrain&amp;rsquo;s Yann C?bron and our very own St?phane Nicoll&amp;rsquo;s &lt;a href="http://www.infoq.com/presentations/spring-boot-intellij"&gt;epic SpringOne2GX 2015 presentation on how Spring Boot lends itself to first-class tooling&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;our pal Baeldung is back at it again, &lt;a href="https://www.youtube.com/watch?v=71UFLAVXgq0"&gt;this time with a video on monitoring Spring Boot applications&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://tomaszdziurko.pl/2016/01/dockerizing-spring-boot-application/"&gt;http://tomaszdziurko.pl/2016/01/dockerizing-spring-boot-application/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Neo4j has a nice transcription &lt;a href="http://neo4j.com/blog/polyglot-persistence-microservices-spring-cloud-neo4j/"&gt;of our GraphConnect 2015 talk&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;this third entry in a Spanish-language series &lt;a href="https://www.paradigmadigital.com/dev/integrar-microservicios-spring-cloud-34/"&gt;on building microservices with Spring Boot and Spring Cloud looks pretty good!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;the talk I gave on building cloud native Java applications &lt;a href="http://www.infoq.com/br/presentations/the-cloud-native-application-microservices-with-spring-boot-and-spring-cloud"&gt;using Spring Boot and Spring Cloud at QCon Rio de Janeiro&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I really dug our pal Nicolas Frankel&amp;rsquo;s post &lt;a href="https://blog.frankel.ch/playing-with-spring-boot-vaadin-and-kotlin"&gt;on using Spring Boot and Vaadin together with the Kotlin programming language&lt;/a&gt;. Kotlin&amp;rsquo;s a very nice language and this post covers some issues you&amp;rsquo;ll encounter in your first steps using Spring and Kotlin together. Very handy!&lt;/li&gt;
  &lt;li&gt;Groovy is &lt;em&gt;also&lt;/em&gt; a very nice programming language and if you want further proof then you need look &lt;a href="https://dzone.com/articles/grails-goodness-using-spring-cloud-config-server"&gt;no further than this post which demonstrates standing up a Spring Cloud Config Server in almost no code at all!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Spring Boot 1.3.2 released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/01/22/spring-boot-1-3-2-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Phil Webb</name>
    </author>
    <id>tag:spring.io,2016-01-22:2355</id>
    <updated>2016-01-22T03:26:14Z</updated>
    <content type="html">&lt;p&gt;Spring Boot 1.3.2 has been released and is available now from &lt;a href="http://repo.spring.io/release"&gt;repo.spring.io&lt;/a&gt; and &lt;a href="http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.springframework.boot%22"&gt;Maven Central&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;This maintenance release includes a &lt;a href="https://github.com/spring-projects/spring-boot/issues?q=milestone%3A1.3.2+is%3Aclosed"&gt;number of fixes&lt;/a&gt; and 3rd party dependency updates.&lt;/p&gt;
&lt;p&gt;If you are upgrading from 1.3.1 there is one potentially breaking change; we now only search for &lt;code&gt;messages.properties&lt;/code&gt; (and not &lt;code&gt;messages*.properties&lt;/code&gt;) to enable auto-configuration of a message source. If you previously had a message file of the form &lt;code&gt;messages_en.properties&lt;/code&gt; and you didn&amp;rsquo;t include a default &lt;code&gt;messages.properties&lt;/code&gt; file, you will now need to add one.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-boot/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot/issues"&gt;Issues&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle"&gt;Documentation&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Pivotal Academy Launches Updated Spring Classes</title>
    <link rel="alternate" href="https://spring.io/blog/2016/01/21/pivotal-academy-launches-updated-spring-classes" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Paul</name>
    </author>
    <id>tag:spring.io,2015-11-17:2299</id>
    <updated>2016-01-21T01:01:07Z</updated>
    <content type="html">&lt;p&gt;It has been 7 years now since I taught my first Spring class. At that time almost everything was XML and configuring JPA or Spring Security, for example, could be a lot of hard work. Spring has matured a great deal in the meantime with component-scanning, Java Configuration and Spring Boot making it much more fun to use.&lt;/p&gt;
&lt;p&gt;At every stage we have updated our Spring courses to reflect these changes and I am pleased to announce that our most popular Spring training courses - Core Spring, Spring Web and Enterprise Spring - have been revised to align with the latest Spring 4.2 release. These courses include much more &lt;a href="http://projects.spring.io/spring-boot"&gt;Spring Boot&lt;/a&gt; material and expanded coverage of features like &lt;a href="http://projects.spring.io/spring-data"&gt;Spring Data&lt;/a&gt;, &lt;a href="http://projects.spring.io/spring-hateoas"&gt;Spring HATEOAS&lt;/a&gt;, &lt;a href="http://docs.spring.io/spring/docs/current/spring-framework-reference/html/websocket.html"&gt;Spring MVC Websockets&lt;/a&gt;, &lt;a href="http://projects.spring.io/spring-xd"&gt;Spring XD&lt;/a&gt;, &lt;a href="http://projects.spring.io/spring-cloud"&gt;Spring Cloud&lt;/a&gt; and microservices.&lt;/p&gt;
&lt;p&gt;These courses are the perfect opportunity to enhance your skill-set and become &lt;em&gt;Spring Certified&lt;/em&gt;. You can learn more about our curriculum below and I encourage you to visit &lt;em&gt;The Pivotal Academy&lt;/em&gt; at &lt;a href="https://pivotal.io/academy"&gt;https://pivotal.io/academy&lt;/a&gt; to schedule your class today.&lt;/p&gt;&lt;h1&gt;&lt;a href="#core-spring" class="anchor" name="core-spring"&gt;&lt;/a&gt;Core Spring&lt;/h1&gt;
&lt;p&gt;Designed for developers and architects, Core Spring is a 4-day class that explores all the basics of using Spring. The content is broken down into three sections: the Spring Container, Data Management and building Web Applications&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Container&lt;/strong&gt;: configuration using Java Config, Spring annotations like @Autowired, XML bean-files, Aspect Oriented programming and Spring based integration testing.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Data Management&lt;/strong&gt;: &lt;code&gt;JdbcTemplate&lt;/code&gt;, caching using &lt;code&gt;@Cachable&lt;/code&gt;, in-memory embedded databases for testing, Spring managed transactions, JPA and Spring Data&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Web Applications&lt;/strong&gt;: writing Spring MVC Controllers, using Spring Boot, implementing REST using Spring MVC, Spring Security and Cloud Native applications (Spring Cloud)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The course has been overhauled to use Spring 4.2 and covers several features introduced in Spring 4 such as &lt;code&gt;@Optional&lt;/code&gt; parameters, &lt;code&gt;@Sql&lt;/code&gt; for database testing and &lt;code&gt;@RestController&lt;/code&gt;,&lt;br/&gt;Note that as this is a fundamentals course many of the new features in 4.x are beyond its scope.&lt;/p&gt;
&lt;p&gt;Another big change to the course is expanding coverage of web applications to include Spring Boot and Building Microservices with Spring Cloud. And for those of you who may have taken or were familiar with Core Spring 3.x, the course and labs have been fully revamped to use Annotations and Java Configuration.&lt;/p&gt;
&lt;p&gt;To learn more about our updated Core Spring course, to view the complete course datasheet and to register for class, visit the &lt;a href="https://pivotal.io/academy#core-spring"&gt;course page&lt;/a&gt; at the Pivotal Academy.&lt;/p&gt;&lt;h1&gt;&lt;a href="#spring-web" class="anchor" name="spring-web"&gt;&lt;/a&gt;Spring Web&lt;/h1&gt;
&lt;p&gt;Looking for a deep-dive into Spring MVC and related technologies? Our 4-days Spring web course teaches you how to create enterprise web applications across four key areas:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Basics&lt;/strong&gt;: Spring MVC Controllers, layout management, defining views, using multiple view technologies and form handling&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Internals&lt;/strong&gt;: Configuring a Spring MVC application using web.xml or Servlet 3 Java configuration, understanding Handler Mappers, Handler Adapters, View Resolvers and Interceptors, Internationalization, Resource handling including CORS support, &lt;a href="https://spring.io/blog/2013/11/01/exception-handling-in-spring-mvc"&gt;exception handling&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Enterprise&lt;/strong&gt;: implementing REST, using the &lt;code&gt;RestTemplate&lt;/code&gt;, Spring Security, Testing with the MockMvc framework, Spring Boot simplification, using Web Sockets&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This course has also been overhauled to use Spring 4.2 and Java 8 covering Spring 4 features such as &lt;code&gt;@RestControllers&lt;/code&gt;, &lt;code&gt;AsyncRestTemplate&lt;/code&gt;, &lt;code&gt;ResponseBodyAdvice&lt;/code&gt;, the resource handling pipeline, Web Sockets and &lt;code&gt;@CrossOrigin&lt;/code&gt; (CORS). The course also explores Spring Boot since it makes writing Spring MVC applications quick and easy. However, while this is beneficial, many of the labs do not require Spring Boot as we want attendees to learn how to use MVC fully and be able to override Spring Boot defaults with configurations of their own. &lt;/p&gt;
&lt;p&gt;Pivotal Academy recommends students that are new to Spring attend the Core Spring class prior to attending Spring Web. However, if you have a good working knowledge of Spring and your primary interest is building web-applications, our Spring Web course is the right fit for you. &lt;/p&gt;
&lt;p&gt;To learn more about our updated Spring Web course, to view the complete course datasheet and to register for class, visit the &lt;a href="https://pivotal.io/academy#spring-web"&gt;course page&lt;/a&gt; at the Pivotal Academy.&lt;/p&gt;&lt;h1&gt;&lt;a href="#enterprise-spring" class="anchor" name="enterprise-spring"&gt;&lt;/a&gt;Enterprise Spring&lt;/h1&gt;
&lt;p&gt;Use Spring to build loosely coupled event-driven architectures composed from communicating components and processes. A microservices architecture might be one example of this approach.&lt;/p&gt;
&lt;p&gt;Based in part on the popular &lt;a href="http://www.enterpriseintegrationpatterns.com/"&gt;Enterprise Integration Patterns&lt;/a&gt; book, the course covers inter-process communications using Web Services (REST) and Messaging (JMS, AMQP) and then builds on this foundation to cover Spring Integration, Spring Batch and Spring XD.&lt;/p&gt;
&lt;p&gt;Revised for Spring 4.2 the course has expanded coverage of REST and covers new features such as &lt;code&gt;UriComponentsBuilder&lt;/code&gt;, &lt;code&gt;@JmsListener&lt;/code&gt;, our Java DSL for configuring Spring Integration, and an entirely new section on building integration pipelines using Spring XD.&lt;/p&gt;
&lt;p&gt;A reasonable familiarity with Spring and Spring Boot is assumed. We recommend that students that are new to Spring attend the Core Spring class prior to attending Enterprise Spring.&lt;/p&gt;
&lt;p&gt;To learn more about our updated Enterprise Spring course, to view the complete course datasheet and to register for class, visit the &lt;a href="https://pivotal.io/academy#enterprise-spring"&gt;course page&lt;/a&gt; at the Pivotal Academy.&lt;/p&gt;&lt;h1&gt;&lt;a href="#more-information" class="anchor" name="more-information"&gt;&lt;/a&gt;More Information&lt;/h1&gt;
&lt;p&gt;For more information and to view our complete portfolio of Application Framework, Cloud Native and Big Data Suite classes, visit us at the &lt;a href="https://pivotal.io/academy"&gt;Pivotal Academy&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - January 19th, 2016</title>
    <link rel="alternate" href="https://spring.io/blog/2016/01/20/this-week-in-spring-january-19th-2016" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2016-01-20:2354</id>
    <updated>2016-01-20T01:39:01Z</updated>
    <content type="html">&lt;p&gt;Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! What a week it&amp;rsquo;s been!&lt;br/&gt;Last week saw me visit St. Louis to speak to some customers and deliver a talk at&lt;br/&gt;a meetup with &lt;a href=""&gt;my pal Mark Heckler&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;check out this post on using &lt;a href="https://github.com/MarcGiffing/wicket-spring-boot"&gt;Spring Boot with the Wicket web framework&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Nice, quick post &lt;a href="https://dzone.com/articles/spring-data-mongodb-spring-boot"&gt;on using Spring Boot with MongoDB&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I &lt;em&gt;love&lt;/em&gt; this post: it &lt;a href="https://dzone.com/articles/grails-goodness-using-spring-cloud-config-server"&gt;shows how to use Spring Cloud&amp;rsquo;s Config Server with Groovy&lt;/a&gt;. Is that a big deal? NO! It&amp;rsquo;s an incredibly tiny, concise, expressive deal! What a wollup!&lt;/li&gt;
  &lt;li&gt;I hope you&amp;rsquo;ll join my pal Kenny Bastani for a webinar as he looks at how to use Spring Boot and Neo4J to &lt;a href="https://spring.io/blog/2016/01/18/webinar-creating-a-pagerank-analytics-platform-using-spring-boot-microservices"&gt;create a page rank algorithm later this month&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Join Spring Data lead Oliver Gierke as he &lt;a href="https://spring.io/blog/2016/01/18/webinar-what-s-new-in-spring-data"&gt;reviews the latest and greatest in Spring Data in this webinar&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Check out test-obsessed &lt;a href="https://spring.io/blog/2016/01/18/springone2gx-2015-replay-get-the-most-out-of-testing-with-spring-4-2"&gt;Sam Brannen &amp;amp; Nicolas Fr?nkel&amp;rsquo;s talk from SpringOne2GX 2015 on testing with Spring 4.2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Dr. Mark Pollack&amp;rsquo;s SpringOne2GX 2015 talk &lt;a href="https://spring.io/blog/2016/01/18/springone2gx-2015-replay-spring-xd-today-and-tomorrow"&gt;on where Spring XD has been and where it&amp;rsquo;s going is &lt;em&gt;not&lt;/em&gt; to be missed&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;our pal Patrick Grimard&lt;br/&gt; is at it again, this &lt;a href="http://patrickgrimard.com/2016/01/18/spring-boot-devtools-first-look/"&gt;time with a look at Spring Boot 1.3&amp;rsquo;s DevTools&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Some of us here at the big ol&amp;rsquo; Pivotal ranch sat down with The New Stack to talk about cloud native application development. First up is resident sage &lt;a href="http://thenewstack.io/video-get-started-pivotals-cloud-foundry-stack/"&gt;Michael Cot? who looks at the cloud opportunity&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;the next &lt;a href="http://thenewstack.io/video-developers-can-use-pivotals-cloud-foundry-stack/"&gt;interview is with the epic Casey West on the high level implications of a cloud platform like Cloud Foundry for developers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;finally, the last two videos &lt;a href="http://thenewstack.io/video-quickly-spin-apps-cloud-foundrys-spring-boot/"&gt;are l&amp;rsquo;il &amp;rsquo;ol me giving a succinct introduction to Spring Boot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&amp;hellip;&lt;a href="http://thenewstack.io/video-service-discovery-made-easy-spring-cloud-config/"&gt;and Spring Cloud&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Webinar: Creating a PageRank Analytics Platform Using Spring Boot Microservices</title>
    <link rel="alternate" href="https://spring.io/blog/2016/01/18/webinar-creating-a-pagerank-analytics-platform-using-spring-boot-microservices" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2016-01-19:2353</id>
    <updated>2016-01-18T16:41:00Z</updated>
    <content type="html">&lt;p&gt;Speaker: Kenny Bastani&lt;/p&gt;
&lt;p&gt;This webinar introduces you to a sample application that combines multiple microservices with a graph processing platform to rank communities of users on Twitter. The problem we¡¯re going to solve is how to discover communities of influencers on Twitter using a set of seed profiles as inputs.&#xD;
&#xD;
To solve this problem without a background in machine learning or social network analytics might be a bit of a stretch, but we¡¯re going to take a stab at it using a little bit of computer science history. We¡¯re going to use a collection of popular tools as a part of this article¡¯s sample application. The tools we¡¯ll use, in the order of importance, will be:&#xD;
Spring Boot&#xD;
Neo4j&#xD;
Apache Spark&#xD;
Docker&#xD;
RabbitMQ&#xD;
While there are some missing pieces, such as securing REST API access, and mapping device volumes to the containers, these kinds of important topics will be covered in future webinars.&lt;/p&gt;
&lt;p&gt;Thursday, Jan 28th, 2016 3:00PM London GMT &lt;a href="http://connect.pivotal.io/OSS_Webinar_7AMCreatingaPageRankAnalyticsPlatformUsingSpringBootMicroservices_RegisterSpring.html"&gt;Register&lt;/a&gt;&lt;br/&gt;&lt;p&gt;Thursday, Jan 28th, 2016 10:00AM PST (San Francisco GMT-08:00) &lt;a href="http://connect.pivotal.io/OSS_Webinar_10AMCreatingaPageRankAnalyticsPlatformUsingSpringBootMicroservices_RegisterSpring.html"&gt;Register&lt;/a&gt;&lt;/p&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Webinar: What's new in Spring Data</title>
    <link rel="alternate" href="https://spring.io/blog/2016/01/18/webinar-what-s-new-in-spring-data" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2016-01-19:2352</id>
    <updated>2016-01-18T16:06:00Z</updated>
    <content type="html">&lt;p&gt;Speaker: Oliver Gierke&lt;/p&gt;
&lt;p&gt;A year has passed and the Spring Data shipped two release train iterations packed with interesting features. This talk will give a broad overview of the most important introduced in the Fowler and Gosling release trains.&#xD;
We will cover recent additions and improvements in Spring Data Commons - the module that's shared amongst the store specific ones. We'll then delve into the latest and greatest features of individual store modules, like JPA, MongoDB and the community ones as well.&lt;/p&gt;
&lt;p&gt;Tuesday, Jan 26th, 2016 3:00PM GMT &lt;a href="http://connect.pivotal.io/OSS_Webinar_7AMWhatsnewinSpringData_RegisterSpring.html"&gt;Register&lt;/a&gt;&lt;br/&gt;&lt;p&gt;Tuesday, Jan 26th, 2016 10:00AM PST (San Francisco GMT-08:00) &lt;a href="http://connect.pivotal.io/OSS_Webinar_10AMWhatsnewinSpringData_RegisterSpring.html"&gt;Register&lt;/a&gt;&lt;/p&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>SpringOne2GX 2015 replay: Get the Most out of Testing with Spring 4.2</title>
    <link rel="alternate" href="https://spring.io/blog/2016/01/18/springone2gx-2015-replay-get-the-most-out-of-testing-with-spring-4-2" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2016-01-18:2351</id>
    <updated>2016-01-18T12:22:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne2GX 2015&lt;br/&gt;Presenters: Sam Brannen &amp;amp; Nicolas Fr?nkel&lt;br/&gt;Core Spring Track&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/get-the-most-out-of-testing-with-spring-42-53128369"&gt;http://www.slideshare.net/SpringCentral/get-the-most-out-of-testing-with-spring-42-53128369&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Join Sam Brannen and Nicolas Fr?nkel to discover what&amp;rsquo;s new in Spring Framework 4.2&amp;rsquo;s testing support and learn tips and best practices for testing modern, Spring-based applications. Sam Brannen is the Spring Test component lead and author of the Spring TestContext Framework, and Nicolas Fr?nkel is the author of the book &amp;ldquo;Integration Testing from the Trenches&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;In this session, Sam and Nicolas will cover the latest testing features in Core Spring, Spring Boot, and Spring Security. In addition to new features, they will also present insider tips and best practices on integration testing with suites in TestNG, database transactions, SQL script execution, granularity of context configuration files, optimum use of the context cache, a discussion on TestNG vs. JUnit, and much more.&lt;br/&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/enDXm12nVPc" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>SpringOne2GX 2015 replay: Spring XD today and tomorrow</title>
    <link rel="alternate" href="https://spring.io/blog/2016/01/18/springone2gx-2015-replay-spring-xd-today-and-tomorrow" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2016-01-18:2350</id>
    <updated>2016-01-18T12:18:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne2GX 2015&lt;br/&gt;Presenter: Mark Pollack&lt;br/&gt;Big Data Track&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/spring-xd-today-and-tomorrow"&gt;http://www.slideshare.net/SpringCentral/spring-xd-today-and-tomorrow&lt;/a&gt;&lt;br/&gt;In this talk we will cover the major new features added to Spring XD since last year as well as upcoming changes for the next major version. Key integrations driven by the Big Data ecosystem at large such as Kafka, Spark, functional programming, integration with Python, and designer/monitoring UIs will be introduced and demonstrated. The next major version of XD will shift to a foundation based on Cloud-Native architectural principles, where each individual module will be a standalone executable message-based microservice application based on Spring Boot. This allows us to more easily take advantage of Spring Boot and Spring Cloud functionality as well as map more natively onto runtime environments such as YARN, Lattice and Cloud Foundry.&lt;br/&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/NIBYST0z3sg" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - January 12th, 2016</title>
    <link rel="alternate" href="https://spring.io/blog/2016/01/13/this-week-in-spring-january-12th-2016" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2016-01-13:2349</id>
    <updated>2016-01-13T06:31:59Z</updated>
    <content type="html">&lt;p&gt;Welcome to another installation of &lt;em&gt;This Week in Spring!&lt;/em&gt; Today, I spoke at the &lt;a href="http://www.meetup.com/sfjava/events/225481175/"&gt;San Francisco JUG&lt;/a&gt; to a packed room and now I&amp;rsquo;m off to St. Louis for a day of customer meetings. Lots of great stuff to look at as we kick off the new year so let&amp;rsquo;s get to it!&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Check out Spring Integration contributor &lt;a href="https://spring.io/blog/2016/01/12/spring-integration-zip-1-0-0-m1-and-others"&gt;Artem Bilan&amp;rsquo;s post on the latest-and-greatest on Spring Integration&lt;/a&gt; including the debut of a new Spring Integration extension supporting zipping and unzipping of messages in flight.&lt;/li&gt;
  &lt;li&gt;the EuregJUG Maas-Rhine published &lt;a href="http://www.euregjug.eu/2016/01/07/new-site-is-live"&gt;a post on its site about.. the site! Which is all Spring Boot&lt;/a&gt;. Check it out.&lt;/li&gt;
  &lt;li&gt;Check out the replay of Andy Wilkinson&amp;rsquo;s SpringOne2GX 2015 &lt;a href="https://spring.io/blog/2016/01/12/springone2gx-2015-replay-documenting-restful-apis"&gt;talk on documenting REST APIs with Spring REST Docs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Check out the replay of Fatima Casau&amp;rsquo;s &lt;a href="https://spring.io/blog/2016/01/12/springone2gx-2015-replay-spring-boot-and-groovy"&gt;SpringOne2GX 2015 talk on using Spring Boot and Groovy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Marius Bogoevici&amp;rsquo;s SpringOne2GX 2015 talk on stream processing &lt;a href="https://spring.io/blog/2016/01/12/springone2gx-2015-replay-stream-processing-at-scale-with-spring-xd-and-kafka"&gt;at scale with Spring XD and Apache Kafka is also now available&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Security lead Rob Winch&amp;rsquo;s SpringOne2GX 2015 &lt;a href="https://spring.io/blog/2016/01/12/springone2gx-2015-replay-the-state-of-securing-restful-apis-with-spring"&gt;talk on securing REST services with Spring is also available online&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring framework legend and &lt;a href="https://spring.io/blog/2016/01/11/european-conferences-with-strong-spring-content"&gt;lead Juergen Hoeller chimed in to talk about some great Java conferences of interest in the next few months&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Check out Dr. David Syer&amp;rsquo;s &lt;a href="https://spring.io/guides/tutorials/spring-boot-oauth2/"&gt;definitive guide to using Spring Security OAuth and Spring Boot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;and then follow it up with Malike&amp;rsquo;s post on &lt;a href="http://malike.github.io/Spring-Security-OAuth2/"&gt;using Spring Security OAuth and MongoDB to secure applications&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I&amp;rsquo;m pretty sure I posted these before, but they&amp;rsquo;re worth reiteration: &lt;a href="http://www.infoq.com/news/2015/12/microservices-amazon"&gt;how Amazon uses Microservices&lt;/a&gt; and &lt;a href="https://dzone.com/articles/the-power-patterns-and-pains-of-microservices"&gt;the Pain, Power, and Patterns of Microservices&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Red Hat&amp;rsquo;s Christian Posta just published a blog that talks about a potential 25x &lt;a href="http://blog.christianposta.com/activemq/speeding-up-activemq-persistent-messaging-performance-by-25x/"&gt;performance increase for certain use cases with ActiveMQ&lt;/a&gt; - definitely worth a read!&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>SpringOne2GX 2015 replay: Documenting RESTful APIs</title>
    <link rel="alternate" href="https://spring.io/blog/2016/01/12/springone2gx-2015-replay-documenting-restful-apis" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2016-01-12:2347</id>
    <updated>2016-01-12T11:38:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne2GX 2015.&lt;br/&gt;Track: Web / Javascript Track&lt;br/&gt;Speaker: Andy Wilkinson&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/documenting-restful-apis"&gt;http://www.slideshare.net/SpringCentral/documenting-restful-apis&lt;/a&gt;&lt;br/&gt;An API&amp;rsquo;s documentation is a vital part of making it easy to understand and easy to use. RESTful APIs are no different. In this talk we&amp;rsquo;ll look at what should be included in your RESTful API&amp;rsquo;s documentation and, just as importantly, what should be omitted. Using real-word examples, both good and bad, we&amp;rsquo;ll discuss how the documentation should be structured so that it&amp;rsquo;s informative, succinct, and easy to read. Having identified what good documentation looks like, we&amp;rsquo;ll discuss some of the tools that are available for documenting services built using Spring. In particular, we&amp;rsquo;ll look at some of the problems and limitations of choosing a tool like Swagger and how some alternatives, including Spring REST Docs, avoid these shortcomings and help you to produce documentation that your users will love.&lt;br/&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/k5ncCJBarRI" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;</content>
  </entry>
</feed>
